<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	<!-- <http auto-config='true'> <intercept-url pattern="/**" access="hasRole('ROLE_USER')" 
		/> </http> <authentication-manager> <authentication-provider> <user-service> 
		<user name="guest" password="guest" authorities="ROLE_USER" /> </user-service> 
		</authentication-provider> </authentication-manager> -->

	<http auto-config='true' use-expressions="true">
		<intercept-url pattern="/login" access="permitAll" />
		<intercept-url pattern="/login_duplicate" access="isAnonymous()" />
		<!-- <intercept-url pattern="/**" access="isAuthenticated()" /> -->
		<intercept-url pattern="/addMember" access="permitAll"/>
		<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/**"
			access="hasAnyRole('ROLE_ADMIN','ROLE_USER')" />

		<form-login login-page="/login" username-parameter="id"
			password-parameter="pw" login-processing-url="/loginProcess"
			default-target-url="/login_success" authentication-failure-url="/login"
			always-use-default-target='true' />

		<session-management>
			<concurrency-control max-sessions="1"
				expired-url="/login_duplicate" />
		</session-management>
		
		<csrf disabled="true"/>
	</http>

	<beans:bean
		class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler" />

	<authentication-manager>
		<!-- <authentication-provider ref="customAuthenticationProvider" /> -->
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select userid, userpw, 1 as enabled from tbl_member where userid = ?"
				authorities-by-username-query="select userid, authority from authorities where userid = ?" />
			<password-encoder hash="bcrypt" />
		</authentication-provider>
	</authentication-manager>

	<!-- <beans:bean id="customAuthenticationProvider" class="com.netsong7.test1.CustomAuthenticationProvider" /> -->
	<beans:bean id="bcryptPasswordEncoAccess Deniedder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	
	<global-method-security pre-post-annotations="enabled" />
</beans:beans>
